{"ast":null,"code":"var _jsxFileName = \"/Users/aniket/Desktop/DesktopFolder/Programming/NodeProjects/iris-visualizer/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Scatter } from 'react-chartjs-2';\nimport irisFlowers from '../data/iris';\n\nconst Index = () => {\n  const data = {\n    datasets: [{\n      label: 'Hey',\n      data: irisFlowers.filter(({\n        species\n      }) => species == \"setosa\").map(({\n        petal_length: x,\n        petal_width: y\n      }) => ({\n        x,\n        y\n      })),\n      pointBackgroundColor: 'green',\n      pointBorderColor: 'green'\n    }]\n  };\n  return __jsx(Scatter, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aniket/Desktop/DesktopFolder/Programming/NodeProjects/iris-visualizer/pages/index.tsx"],"names":["Scatter","irisFlowers","Index","data","datasets","label","filter","species","map","petal_length","x","petal_width","y","pointBackgroundColor","pointBorderColor"],"mappings":";;;AACA,SAASA,OAAT,QAAmC,iBAAnC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,KAAa,GAAG,MAAM;AACxB,QAAMC,IAAgC,GAAG;AACrCC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,KADX;AAEIF,MAAAA,IAAI,EAAEF,WAAW,CAACK,MAAZ,CAAmB,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAiBA,OAAO,IAAI,QAA/C,EAAyDC,GAAzD,CAA6D,CAAC;AAAEC,QAAAA,YAAY,EAAEC,CAAhB;AAAmBC,QAAAA,WAAW,EAAEC;AAAhC,OAAD,MAA0C;AAAEF,QAAAA,CAAF;AAAKE,QAAAA;AAAL,OAA1C,CAA7D,CAFV;AAGIC,MAAAA,oBAAoB,EAAE,OAH1B;AAIIC,MAAAA,gBAAgB,EAAE;AAJtB,KADM;AAD2B,GAAzC;AAWA,SAAO,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEX,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAbD;;AAeA,eAAeD,KAAf","sourcesContent":["import { FC } from 'react';\nimport { Scatter, ChartData } from 'react-chartjs-2';\nimport irisFlowers from '../data/iris';\n\nconst Index: FC<{}> = () => {\n    const data: ChartData<Chart.ChartData> = {\n        datasets: [\n            {\n                label: 'Hey',\n                data: irisFlowers.filter(({ species }) => species == \"setosa\").map(({ petal_length: x, petal_width: y }) => ({ x, y })),\n                pointBackgroundColor: 'green',\n                pointBorderColor: 'green'\n            }\n        ]\n    };\n\n    return <Scatter data={data} />\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}